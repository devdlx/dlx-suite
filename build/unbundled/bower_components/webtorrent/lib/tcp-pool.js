function TCPPool(e){var n=this;debug("create tcp pool (port %s)",e.torrentPort),n.server=net.createServer(),n._client=e,n._pendingConns=[],n._onConnectionBound=function(e){n._onConnection(e)},n._onListening=function(){n._client._onListening()},n._onError=function(e){n._client._destroy(e)},n.server.on("connection",n._onConnectionBound),n.server.on("listening",n._onListening),n.server.on("error",n._onError),n.server.listen(e.torrentPort)}function noop(){}module.exports=TCPPool;var arrayRemove=require("unordered-array-remove"),debug=require("debug")("webtorrent:tcp-pool"),net=require("net"),Peer=require("./peer");TCPPool.prototype.destroy=function(e){var n=this;debug("destroy tcp pool"),n.server.removeListener("connection",n._onConnectionBound),n.server.removeListener("listening",n._onListening),n.server.removeListener("error",n._onError),n._pendingConns.forEach(function(e){e.on("error",noop),e.destroy()});try{n.server.close(e)}catch(n){e&&process.nextTick(e)}n.server=null,n._client=null,n._pendingConns=null},TCPPool.prototype._onConnection=function(e){function n(e,n){o();var i=r._client.get(e);if(i)t.swarm=i,i._addIncomingPeer(t),t.onHandshake(e,n);else{var s=new Error("Unexpected info hash "+e+" from incoming peer "+t.id);t.destroy(s)}}function o(){e.removeListener("close",o),i.removeListener("handshake",n),r._pendingConns&&arrayRemove(r._pendingConns,r._pendingConns.indexOf(e))}var r=this;if(!e.remoteAddress)return e.on("error",noop),void e.destroy();r._pendingConns.push(e),e.once("close",o);var t=Peer.createTCPIncomingPeer(e),i=t.wire;i.once("handshake",n)};