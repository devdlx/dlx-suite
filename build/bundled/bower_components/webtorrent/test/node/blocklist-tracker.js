var extend=require("xtend"),fixtures=require("webtorrent-fixtures"),series=require("run-series"),test=require("tape"),TrackerServer=require("bittorrent-tracker/server"),WebTorrent=require("../../");test("blocklist blocks peers discovered via tracker",function(e){e.plan(9);var n,r,t,o=extend(fixtures.leaves.parsedTorrent);series([function(r){n=new TrackerServer({udp:!1,ws:!1}),n.listen(function(){var e=n.http.address().port,t="http://127.0.0.1:"+e+"/announce";o.announce=t,r(null)}),n.once("start",function(){e.pass("client1 connected to tracker"),n.once("start",function(){e.pass("client2 connected to tracker")})})},function(n){r=new WebTorrent({dht:!1}),r.on("error",function(n){e.fail(n)}),r.on("warning",function(n){e.fail(n)});var t=r.add(o);t.on("invalidPeer",function(){e.pass("client1 found itself"),n(null)}),t.on("blockedPeer",function(){e.fail("client1 should not block any peers")})},function(n){t=new WebTorrent({dht:!1,blocklist:["127.0.0.1"]}),t.on("error",function(n){e.fail(n)}),t.on("warning",function(n){e.fail(n)});var r=t.add(o);r.once("blockedPeer",function(){e.pass("client2 blocked first peer"),r.once("blockedPeer",function(){e.pass("client2 blocked second peer"),n(null)})}),r.on("peer",function(){e.fail("client2 should not find any peers")})}],function(o){e.error(o),n.close(function(){e.pass("tracker closed")}),r.destroy(function(n){e.error(n,"client1 destroyed")}),t.destroy(function(n){e.error(n,"client2 destroyed")})})});