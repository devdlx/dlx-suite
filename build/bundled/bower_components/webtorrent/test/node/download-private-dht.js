var DHT=require("bittorrent-dht/server"),fixtures=require("webtorrent-fixtures"),series=require("run-series"),test=require("tape"),WebTorrent=require("../../");test("private torrent should not use DHT",function(r){r.plan(4);var n=new DHT({bootstrap:!1});n.on("error",function(n){r.fail(n)}),n.on("warning",function(n){r.fail(n)});var e;series([function(r){n.listen(r)},function(t){e=new WebTorrent({tracker:!1,dht:{bootstrap:"127.0.0.1:"+n.address().port}}),e.on("error",function(n){r.fail(n)}),e.on("warning",function(n){r.fail(n)});var o=e.add(fixtures.bunny.parsedTorrent);o.on("dhtAnnounce",function(){r.fail("client announced to dht")}),e.on("torrent",function(){o.discovery.dht||(r.pass("dht is disabled for this torrent"),t(null))})}],function(t){r.error(t),n.destroy(function(n){r.error(n,"dht server destroyed")}),e.destroy(function(n){r.error(n,"client destroyed")})})}),test("public torrent should use DHT",function(r){r.plan(4);var n=new DHT({bootstrap:!1});n.on("error",function(n){r.fail(n)}),n.on("warning",function(n){r.fail(n)});var e;series([function(r){n.listen(r)},function(t){e=new WebTorrent({tracker:!1,dht:{bootstrap:"127.0.0.1:"+n.address().port}}),e.on("error",function(n){r.fail(n)}),e.on("warning",function(n){r.fail(n)});var o=e.add(fixtures.leaves.parsedTorrent);o.on("dhtAnnounce",function(){r.pass("client announced to dht"),t(null)}),e.on("torrent",function(){o.client.dht||r.fail("dht server is null")})}],function(t){r.error(t),n.destroy(function(n){r.error(n,"dht server destroyed")}),e.destroy(function(n){r.error(n,"client destroyed")})})});