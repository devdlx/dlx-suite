var DHT=require("bittorrent-dht/server"),fixtures=require("webtorrent-fixtures"),series=require("run-series"),test=require("tape"),WebTorrent=require("../../");test("blocklist blocks peers discovered via DHT",function(n){n.plan(8);var e,r,o;series([function(r){e=new DHT({bootstrap:!1}),e.on("error",function(e){n.fail(e)}),e.on("warning",function(e){n.fail(e)}),e.listen(r)},function(o){function t(){s&&c&&o(null)}r=new WebTorrent({tracker:!1,dht:{bootstrap:"127.0.0.1:"+e.address().port}}),r.on("error",function(e){n.fail(e)}),r.on("warning",function(e){n.fail(e)});var i=r.add(fixtures.leaves.parsedTorrent);i.on("peer",function(){n.fail("client1 should not find any peers")}),i.on("blockedPeer",function(){n.fail("client1 should not block any peers")}),i.on("ready",function(){n.pass("torrent1 ready"),s=!0,t()}),i.on("dhtAnnounce",function(){n.pass("client1 announced to dht"),c=!0,t()});var s=!1,c=!1},function(r){function t(){s&&c&&r(null)}o=new WebTorrent({tracker:!1,dht:{bootstrap:"127.0.0.1:"+e.address().port},blocklist:["127.0.0.1"]}),o.on("error",function(e){n.fail(e)}),o.on("warning",function(e){n.fail(e)});var i=o.add(fixtures.leaves.parsedTorrent);i.on("blockedPeer",function(e){n.pass("client2 blocked connection to client1: "+e),s=!0,t()}),i.on("dhtAnnounce",function(){n.pass("client2 announced to dht"),c=!0,t()}),i.on("peer",function(e){n.fail("client2 should not find any peers")});var s,c}],function(t){n.error(t),e.destroy(function(e){n.error(e,"dht server destroyed")}),r.destroy(function(e){n.error(e,"client1 destroyed")}),o.destroy(function(e){n.error(e,"client2 destroyed")})})});